name: Evaluate Open Policy Agent for Terraform

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

env:
  PATH_TO_TFSCRIPT: "infra"

jobs:
  execute_base_setuup:
    name: BTP Subaccount Setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        id: checkout_repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        id: setup_terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: latest

      - name: Setup Open Policy Agent
        id: setup_opa
        uses: open-policy-agent/setup-opa@v2
        with:
          version: latest

      - name: Initialize Terraform
        id: terraform_init
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT }} init -no-color

      - name: Execute Terraform planning
        id: terraform_plan
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
          export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT }} plan -var 'globalaccount=${{ secrets.GLOBALACCOUNT }}' -var 'build_code_admins=${{ secrets.USERLIST }}' -var 'build_code_developers=${{ secrets.USERLIST }}' -no-color --out tfplan.binary
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT }} show -json tfplan.binary > tfplan.json

      - name: Execute OPA policy
        id: execute_opa
        shell: bash
        run: |
          autoexec=$(opa exec --decision terraform/analysis/autoexec --bundle policy/ tfplan.json | jq '.result[].result')
          score=$(opa exec --decision terraform/analysis/score --bundle policy/ tfplan.json | jq '.result[].result')
          echo "Automatic execution possible (true/false): ${autoexec}"
          echo "Score of change: ${score}"

          if [ "$autoexec" = "false" ]; then
            echo "Automatic execution is not possible. Exiting with error."
            exit 1
          fi
